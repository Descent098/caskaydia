import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";

import { useSession, signIn, signOut } from "next-auth/react";
import { IMatch } from "../../models/Match";
import { useEffect, useState } from "react";
import { Chess, Move } from "chess.js";

import ChessBoard from "../../components/chessboard/ChessBoard";

import ChessUser, { IUser } from "../../models/User";

import Modal from "react-bootstrap/Modal";
import Button from "react-bootstrap/Button";
import Analysis from "../../components/Analysis/Analysis";

/**
 * States of play. Used to decide what to render.
 */
enum ANALYZE_STATES {
  INIT, // the user is not in a match and is not waiting for one
  ANALYSIS, // the user is in a match & is playing
  END, // the user has just ended a match (won, lost or drew)
}

// interface AnalysisData {
//     board: Chess;
//     match_pgn: string;
//     selection: string;
//     isPlayerWhite: boolean;
//     user: IUser | null;
//     analysis_state: ANALYZE_STATES;
//     move_index: number;
//     perspective: string;
// }

// const defaultProps = {
//     board: new Chess(),
//     match_pgn: "",
//     selection: "",
//     isPlayerWhite: true,
//     user: null,
//     analysis_state: ANALYZE_STATES.INIT,
//     move_index: 0,
//     perspective: "white"
// }

function fetchPGN() {
  return "1. e3 c5 2. Nf3 Nc6 3. Bb5 Qc7 4. Bxc6 Qxc6 5. Nc3";
}

const Home: NextPage = () => {
  const { data: session } = useSession();

  const [pgn, setPGN] = useState<string>("");

  function handlePGNChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {
    setPGN(e.currentTarget.value);
  }

  return (
    <div className="row">
      <div className="col-12">
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        {/* <Modal show={state.puzzle_state === PUZZLE_STATES.PUZZLE_END} onHide={handleClose}>
                <Modal.Header closeButton>
                <Modal.Title>Puzzle complete!</Modal.Title>
                </Modal.Header>
                <Modal.Body>You've solved the puzzle! Dismiss to continue to another.</Modal.Body>
                <Modal.Footer>
                <Button variant="primary" onClick={handleClose}>
                    Close
                </Button>
                </Modal.Footer>
            </Modal> */}

        <main className="container d-flex flex-col justify-content-center align-items-center">
          {/* <div>Match: {state.matchId}</div> */}

          <h1 className="display-2">Analysis</h1>

          <div className="text-center">
            <p>
              Paste in the PGN from one of your games and go over the moves you
              played!
              <br />
              <br />
              Premium members get AI assisted analysis!
            </p>
          </div>
          {/* <p>game pgn: {fetchPGN()}</p> */}

          <div className="w-100 card my-3">
            <div className="card-body d-flex flex-col justify-content-center align-items-center">
              <label htmlFor="PGN-input" className="form-label">
                Paste your game PGN here...
              </label>
              <div className="input-group">
                <textarea
                  id="PGN-input"
                  className="form-control"
                  placeholder={fetchPGN()}
                  value={pgn}
                  aria-label="PGN"
                  onChange={handlePGNChange}
                ></textarea>
              </div>
              <div className="btn btn-primary w-100 my-3">Load PGN</div>

              <Analysis match_pgn={pgn} />
            </div>
          </div>
        </main>

        <main>{/* <div>Match: {state.matchId}</div> */}</main>
      </div>
    </div>
  );
};

export async function getStaticProps() {
  return {
    props: {
      protected: true,
      premium: true,
    },
  };
}

export default Home;
